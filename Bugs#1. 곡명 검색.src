#
# * Mp3tag web source for Bugs / Search by Song Title
# v0.3.1 / 180823
# 
# * Installation
# - just copy this script to:
# %appdata%\Mp3tag\data\sources\
# - NOTE '#' in filename makes submenu!
# 
# ---- Original by...
# Mp3tag parsing for Melon.com
#
# Created by Hyosang Park http://hyosang.kr
# Last modified 2016.11.02
#
# Save it in your Mp3tag data directory, i.e.
# C:\Documents and Settings\*username*\Application Data\Mp3tag\data\sources
# ----
#
[Name]=Bugs / 곡명 검색 (앨범 정보 이용)
[BasedOn]=https://music.bugs.co.kr
[IndexUrl]=https://m.bugs.co.kr/search/track?q=%s
[AlbumUrl]=https://music.bugs.co.kr/album/
[WordSeparator]=+
[IndexFormat]=%_url%|%_preview%|%곡명%|%아티스트%
[SearchBy]=%title%
[Encoding]=url-utf-8

# ### Album URL example ###
# "A New Trilogy" by Lovelyz
# AlbumUrl: https://m.bugs.co.kr/album/20032445
# CoverUrl: https://image.bugsm.co.kr/album/images/<size>/200324/20032445.jpg
# -- size: 200, 500, 1000, original
# -- note: care for last 2 digit! (200324 -> 200324'45')

[ParserScriptIndex]=...
debug "off" "C:\Temp\Bugs\debug_search.htm"
# ###################################################################
# This script parses the webpage for all releases
# by this albumname.
#
# The output format is defined by IndexFormat above, which
# is used by the selection dialog
# ###################################################################
do
    # start of list element
    FindLine "<li class=\"__MobileTrackListsearch1234"
    
    # preview image
    FindLine "<img src=\"https://image."
    #FindInLine "<img src=\""
    #SayUntil "\" alt=\""
    MoveLine -2
    
    #Say "|"
    
    # album ID from cover image url
    FindLine "<img src=\"https://image."
    FindInLine "album/images/"
    RegexpReplace "[0-9]+/[0-9]+/" ""
    FindInLine "album/images/"
    SayUntil "."
    MoveLine -2
    
    Say "|"
    
    # preview URL using album ID from cover image url
    FindLine "<img src=\"https://image."
    FindInLine "album/images/"
    RegexpReplace "[0-9]+/[0-9]+/" ""
    FindInLine "album/images/"
    Say "https://music.bugs.co.kr/album/"
    SayUntil "."
    MoveLine -2

    # otherwise,
    # # preview URL (track page)
    # FindLine "class=\"trackLink\">"
    # FindInLine "<a href=\""
    # SayUntil "\""
    
    Say "|"
    
    # song title
    FindLine "span class=\"trackTitle\">"
    FindInLine "span class=\"trackTitle\">"
    SayUntil "</span>"
    
    Say "|"
    
    # artist name
    FindLine "span class=\"artistTitle\">"
    FindInLine "span class=\"artistTitle\">"
    SayUntil "</span>"
    
    SayNewLine

    FindLine "</li>"
    MoveLine +1 1

while "<li class=\"__MobileTrackListsearch1234"

[ParserScriptAlbum]=...
debug "off" "C:\Temp\Bugs\debug_album.htm"
# ###################################################################
# This script parses the albums page for all common information.
#
# The current output variable is set via the outputto command
# All these fields are used by the confirm online information dialog
# ###################################################################

## BugsAlbumID
FindLine "<meta property=\"og:url\" content=\""
OutputTo "BugsAlbumId"
FindInLine "album/"
SayUntil "\"/>"

## Album Title
FindLine "<header class=\"sectionPadding pgTitle noneLNB\">"
MoveLine +2
OutputTo "ALBUM"
FindInLine "<h1>"
SayUntil "</h1>"

## AlbumInfos
FindLine "<section class=\"sectionPadding summaryInfo summaryAlbum\">"

# cover URL
FindLine "<div class=\"photos\">"
FindLine "<img src=\""
OutputTo "CoverURL"

# TODO change cover image size
RegexpReplace "(album/images/)(\d+)" "$1@1000"
RegexpReplace "@" ""

FindInLine "<img src=\""

SayUntil "\""

# Bugs album artist ID & Album Artist name
FindLine "music.bugs.co.kr/artist/"
OutputTo "BugsAlbumArtistId"
FindInLine "artist/"
SayRegexp "[0-9]+" "" "?"
MoveLine +1

OutputTo "AlbumArtist" # TODO multiline
# - tidy artist tag
# : add space between opening parentheses
RegexpReplace "(\w)\(" "$1 (" 1
RegexpReplace "\" >" "\">" 1

SayUntil "</a>"

#OutputTo "Artist"
#SayOutput "AlbumArtist"

# album type*
FindLine "앨범 종류"
MoveLine +1
OutputTo "ALBUMTYPE"
FindInLine "<td>"
SayUntil "</td>"

# released date*
FindLine "발매일"
MoveLine +2
OutputTo "YEAR"
FindInLine "<time datetime=\""

# - get year.month.day
SayUntil "\">"

# TODO to get 'year' only, use below
# SayNChars 4

# genre*
FindLine "장르"
MoveLine +2
OutputTo "GENRE"
FindInLine "\">"
SayUntil "</a>"

# style** -- multiline
FindLine "스타일"
MoveLine +2
joinuntil "</tr>"
OutputTo "STYLE"
FindInLine "\">"
SayUntil "</a>"
FindInLine "\">" 1 1
MoveChar -2
if "\">"
  do
    MoveChar +2
    Say ", "
    SayUntil "</a>"
    FindInLine "\">" 1 1
    MoveChar -2
  while "\">"
endif

# publisher*
FindLine "기획사" 1 1
if "							<th scope="row">기획사</th>"
  MoveLine +1
  OutputTo "PUBLISHER"
  FindInLine "<td>"
  SayUntil "</td>"
else
  GotoLine 1
endif

# distributer*
FindLine "유통사" 1 1
if "							<th scope="row">유통사</th>"
  MoveLine +1
  OutputTo "DISTRIBUTER"
  FindInLine "<td>"
  SayUntil "</td>"
else
  GotoLine 1
endif

# length*
FindLine "재생 시간"
MoveLine +1
OutputTo "ALBUMLENGTH"
FindInLine "<time datetime=\""
SayUntil "\">"

FindLine "<h1>수록곡</h1>"
MoveLine +1
OutputTo "TotalTracks"
FindInLine "\"desc\">("
SayUntil ")</p>"

# -------
FindLine "\"list trackList"

# if multiple disc
FindLine "<tr class=\"cd\">" 1 1
Unspace
if "<tr class=\"cd\">"
  set "tCD" "On"
endif

GotoLine 1
FindLine "\"list trackList"

Do
  FindLine "<tr albumId=\""
  
#  OutputTo "Tracks"
#  SayOutput "TotalTracks"
#  Say "|"
  
  # track Id
  FindLine "<input type=\"checkbox\""
  OutputTo "BugsTrackId"
  FindInLine "value=\""
  SayUntil "\""
  # SayRegexp "[0-9]{2,}"
  Say "|"
  
  # disc id if
  ifoutput "tCD"
    OutputTo "DISCNUMBER"
    FindInLine "disc_id=\""
    SayUntil "\""
    Say "|"
  endif

  # track title
  # remove unnecessary tags
  RegexpReplace "\(.+삽입곡\)" ""
  RegexpReplace " \">" "\">"
  
  OutputTo "tTITLE"
  FindInLine "title=\""
  SayUntil "\""
  Say "|"
  
  # track number
  FindLine "<p class=\"trackIndex\">"
  MoveLine +1
  OutputTo "tTrack"
  FindInLine "<em>"
  SayUntil "</em>"
  Say "|"
  
  # is title?
  MoveLine +1
  OutputTo "TitleTrack"
  if "<span class=\"albumTitle\""
    Say "O"
  endif
  Say "|"
  
  # track artist
  FindLine "<p class=\"artist\""
  MoveLine +1
  FindLine "\">"
  
  # - tidy DUPLICATED artist tag
  # : add space between opening parentheses
  RegexpReplace "(\w)\(" "$1 ("
  
  OutputTo "ARTIST"
  FindInLine "\">"
  SayUntil "</a>"
  Say "|"
  
  OutputTo "tracks"
  Say "|"

  # FindLine "</tr>"
  # MoveLine +1

  FindLine "<tr albumId=\"" 1 1
While "<tr albumId=\""

# -- comment --
GotoLine 1
FindLine "<section class=\"sectionPadding contents albumDesc\">"
FindLine "<p id=\"albumContents\""
MoveLine +1
OutputTo "ALBUMDESCRIPTION"
# NOTE CR+LF, not just LF, it's Windows...!
RegexpReplace "<br/>" "\r\n"
RegexpReplace "</?\w+>" ""
SayRest

# TODO don't know, but the order is important
OutputTo "TITLE"
SayOutput "tTITLE"
OutputTo "track"
SayOutput "ttrack"

set "tTITLE"
set "ttrack"
set "tCD"
